seq(0,1.5,length = 40)
library(geoR)
library(fields)
library(MASS)
set.seed(1)
n = 5e2
s = cbind(runif(n),runif(n))
plot(s)
tau2 = 0.5
sig2 = 0.5
rho = 0.05
dist_matrix = as.matrix(rdist(s))
cov_mat = sig2 * exp(- dist_matrix / rho) + tau2 * diag(n)
y = mvrnorm(1,rep(0,n),cov_mat)
quilt.plot(s[,1],s[,2],y)
dat_geo0 = as.geodata(cbind(s,y),coords.col=1:2, data.col=3)
v0 = variog(dat_geo0,estimator.type="classical",max.dist = 1.5,breaks = seq(0,1.5,length = 40))
plot(v0)
library(geoR)
library(fields)
library(MASS)
set.seed(1)
n = 3e2
s = cbind(runif(n),runif(n))
plot(s)
tau2 = 0.5
sig2 = 0.5
rho = 0.05
dist_matrix = as.matrix(rdist(s))
cov_mat = sig2 * exp(- dist_matrix / rho) + tau2 * diag(n)
y = mvrnorm(1,rep(0,n),cov_mat)
quilt.plot(s[,1],s[,2],y)
dat_geo0 = as.geodata(cbind(s,y),coords.col=1:2, data.col=3)
v0 = variog(dat_geo0,estimator.type="classical",max.dist = 1.5,breaks = seq(0,1.5,length = 40))
plot(v0)
library(geoR)
library(fields)
library(MASS)
set.seed(1)
n = 3e2
s = cbind(runif(n),runif(n))
plot(s)
tau2 = 0.5
sig2 = 0.5
rho = 0.5
dist_matrix = as.matrix(rdist(s))
cov_mat = sig2 * exp(- dist_matrix / rho) + tau2 * diag(n)
y = mvrnorm(1,rep(0,n),cov_mat)
quilt.plot(s[,1],s[,2],y)
dat_geo0 = as.geodata(cbind(s,y),coords.col=1:2, data.col=3)
v0 = variog(dat_geo0,estimator.type="classical",max.dist = 1.5,breaks = seq(0,1.5,length = 40))
plot(v0)
library(geoR)
library(fields)
library(MASS)
set.seed(1)
n = 3e2
s = cbind(runif(n),runif(n))
plot(s)
tau2 = 0.8
sig2 = 0.2
rho = 0.5
dist_matrix = as.matrix(rdist(s))
cov_mat = sig2 * exp(- dist_matrix / rho) + tau2 * diag(n)
y = mvrnorm(1,rep(0,n),cov_mat)
quilt.plot(s[,1],s[,2],y)
dat_geo0 = as.geodata(cbind(s,y),coords.col=1:2, data.col=3)
v0 = variog(dat_geo0,estimator.type="classical",max.dist = 1.5,breaks = seq(0,1.5,length = 40))
plot(v0)
library(geoR)
library(fields)
library(MASS)
set.seed(1)
n = 3e2
s = cbind(runif(n),runif(n))
plot(s)
tau2 = 0.8
sig2 = 0.2
rho = 0.5
dist_matrix = as.matrix(rdist(s))
cov_mat = sig2 * exp(- dist_matrix / rho) + tau2 * diag(n)
y = mvrnorm(1,rep(0,n),cov_mat)
quilt.plot(s[,1],s[,2],y)
dat_geo0 = as.geodata(cbind(s,y),coords.col=1:2, data.col=3)
v0 = variog(dat_geo0,estimator.type="classical",max.dist = 1.5,breaks = seq(0,1.5,length = 40))
plot(v0)
library(geoR)
library(fields)
library(MASS)
set.seed(1)
n = 1e2
s = cbind(runif(n),runif(n))
plot(s)
tau2 = 0.8
sig2 = 0.2
rho = 0.5
dist_matrix = as.matrix(rdist(s))
cov_mat = sig2 * exp(- dist_matrix / rho) + tau2 * diag(n)
y = mvrnorm(1,rep(0,n),cov_mat)
quilt.plot(s[,1],s[,2],y)
dat_geo0 = as.geodata(cbind(s,y),coords.col=1:2, data.col=3)
v0 = variog(dat_geo0,estimator.type="classical",max.dist = 1.5,breaks = seq(0,1.5,length = 40))
plot(v0)
library(geoR)
library(fields)
library(MASS)
set.seed(1)
n = 1e2
s = cbind(runif(n),runif(n))
plot(s)
tau2 = 0.5
sig2 = 0.5
rho = 0.5
dist_matrix = as.matrix(rdist(s))
cov_mat = sig2 * exp(- dist_matrix / rho) + tau2 * diag(n)
y = mvrnorm(1,rep(0,n),cov_mat)
quilt.plot(s[,1],s[,2],y)
dat_geo0 = as.geodata(cbind(s,y),coords.col=1:2, data.col=3)
v0 = variog(dat_geo0,estimator.type="classical",max.dist = 1.5,breaks = seq(0,1.5,length = 40))
plot(v0)
library(geoR)
library(fields)
library(MASS)
set.seed(1)
n = 50
s = cbind(runif(n),runif(n))
plot(s)
tau2 = 0.1
sig2 = 0.9
rho = 0.5
dist_matrix = as.matrix(rdist(s))
cov_mat = sig2 * exp(- dist_matrix / rho) + tau2 * diag(n)
y = mvrnorm(1,rep(0,n),cov_mat)
quilt.plot(s[,1],s[,2],y)
dat_geo0 = as.geodata(cbind(s,y),coords.col=1:2, data.col=3)
v0 = variog(dat_geo0,estimator.type="classical",max.dist = 1.5,breaks = seq(0,1.5,length = 40))
plot(v0)
library(geoR)
library(fields)
library(MASS)
set.seed(1)
n = 50
s = cbind(runif(n),runif(n))
plot(s)
tau2 = 0.3
sig2 = 0.7
rho = 0.5
dist_matrix = as.matrix(rdist(s))
cov_mat = sig2 * exp(- dist_matrix / rho) + tau2 * diag(n)
y = mvrnorm(1,rep(0,n),cov_mat)
quilt.plot(s[,1],s[,2],y)
dat_geo0 = as.geodata(cbind(s,y),coords.col=1:2, data.col=3)
v0 = variog(dat_geo0,estimator.type="classical",max.dist = 1.5,breaks = seq(0,1.5,length = 40))
plot(v0)
library(geoR)
library(fields)
library(MASS)
set.seed(1)
n = 50
s = cbind(runif(n),runif(n))
plot(s)
tau2 = 0.5
sig2 = 0.5
rho = 0.5
dist_matrix = as.matrix(rdist(s))
cov_mat = sig2 * exp(- dist_matrix / rho) + tau2 * diag(n)
y = mvrnorm(1,rep(0,n),cov_mat)
quilt.plot(s[,1],s[,2],y)
dat_geo0 = as.geodata(cbind(s,y),coords.col=1:2, data.col=3)
v0 = variog(dat_geo0,estimator.type="classical",max.dist = 1.5,breaks = seq(0,1.5,length = 40))
plot(v0)
xx= seq(0.1,10,length = 100)
plot(xx,1/xx)
plot(xx,exp(xx))
plot(xx,xx^2)
plot(xx,sqrt(xx))
x = rgamma(1e6,5,5)
sqrt(mean(x))
mean(sqrt(x))
a = 5
b = 5
(gamma(a + 1/2)* b^a / gamma(a)) / (a * b)
b = 1/5
a = 1/5
(gamma(a + 1/2)* b^a / gamma(a)) / (a * b)
a = 5
(gamma(a + 1/2)* b^a / gamma(a)) / (a * b)
(gamma(a + 1/2)* b^a / gamma(a)) / sqrt(a * b)
(gamma(a + 1/2)* b^a / gamma(a)) / sqrt(a * b)
a = 1/5
(gamma(a + 1/2)* b^a / gamma(a)) / sqrt(a * b)
gamma(11)
gamma(1)
gamma(1/2)
sqrt(pi)
sqrt(1/2)
1/sqrt(2)
sqrt(pi)
setwd("C:/Users/philaw/Box/Research/Porcu/Torus/code/ozone")
library(Rcpp)
library(RcppArmadillo)
library(RcppEigen)
#library(RcppSugar)
library(inline)
library(fields)
library(splancs)
library(coda)
library(xtable)
library(scoringRules)
library(MASS)
library(parallel)
#library(doMC)
library(foreach)
#RcppArmadillo.package.skeleton()
try(setwd("C:/Users/philaw/Box/Research/Porcu/Torus/code/ozone"),silent = TRUE)
rm(list=ls())
########################## Load Data
Rcpp::sourceCpp("nngp_circle.cpp")
source("fit_nngp.R")
########################## periodic time
period_time = function(t,period = 24){
mod_t = t %% period
time1 = 2 * pi * mod_t / period
time2 = 2 * pi -  2 * pi * mod_t / period
apply(cbind(time1,time2),1,min)
}
post_sum = function(x,alp = 0.1){
mu_post = apply(x,2,mean)
sd_post = apply(x,2,sd)
CI = apply(x,2,quantile,c(alp/2,1 - alp/2))
mat = cbind(mu_post,sd_post,t(CI))
colnames(mat) = c("mean","sd",paste("CI_",c(alp/2,1-alp/2),sep = ""))
rownames(mat) = colnames(x)
mat
}
load("final_mode.RData")
S = nrow(mod$w)
mod$w_star = t(sapply(1:S,function(x){
mod$w[x,] - mean(mod$w[x,])
}))
mod$mu_star = mod$bet[,1] + apply(mod$w,1,mean)
plot(mod$sig2,type = "l")
plot(mod$tau2,type = "l")
plot(mod$sig2,type = "l")
plot(mod$w_star[,1],type = "l")
plot(mod$w_star[,1001],type = "l")
plot(mod$w_star[,2001],type = "l")
plot(mod$w_star[,3001],type = "l")
plot(mod$w_star[,4001],type = "l")
plot(mod$w_star[,5001],type = "l")
plot(mod$cov[,1],type = "l")
plot(mod$cov[,2],type = "l")
plot(mod$cov[,3],type = "l")
plot(mod$cov[,4],type = "l")
sums = post_sum(cbind(mod$mu_star,mod$bet[,-1],mod$sig2,
mod$tau2,mod$sig2 /(mod$sig2 + mod$tau2),mod$cov))
rownames(sums) = c("beta_0","beta_1","beta_2","sigma^2","tau^2","ratio","c_w","c_t")
xtable(sums,digits = 4)
setwd("C:/Users/philaw/Box/Research/Porcu/Torus/code/ozone")
S = nrow(mod$w)
mod$w_star = t(sapply(1:S,function(x){
mod$w[x,] - mean(mod$w[x,])
}))
mod$mu_star = mod$bet[,1] + apply(mod$w,1,mean)
#its_use = 2000:6999
plot(mod$sig2,type = "l")
plot(mod$tau2,type = "l")
#plot(mod$mu_star,type = "l")
plot(mod$w_star[,1],type = "l")
plot(mod$w_star[,1001],type = "l")
plot(mod$w_star[,2001],type = "l")
plot(mod$w_star[,3001],type = "l")
plot(mod$w_star[,4001],type = "l")
plot(mod$w_star[,5001],type = "l")
plot(mod$cov[,1],type = "l")
plot(mod$cov[,2],type = "l")
plot(mod$cov[,3],type = "l")
plot(mod$cov[,4],type = "l")
plot(mod$mu_star,type = "l")
plot(mod$bet[,2],type = "l")
plot(mod$bet[,3],type = "l")
sums = post_sum(cbind(mod$mu_star,mod$bet[,-1],mod$sig2,
mod$tau2,mod$sig2 /(mod$sig2 + mod$tau2),mod$cov))
rownames(sums) = c("beta_0","beta_1","beta_2","sigma^2","tau^2","ratio","c_w","c_t")
xtable(sums,digits = 4)
cov_mean = apply(mod$cov,2,mean)
times = seq(0,2 * 168,length = 1000)
theta = period_time(times,24)
vartheta = period_time(times,168)
pdf("../../paper1/time_differences.pdf",width =10,height = 4)
plot(times,times,type = "l",lwd = 3,xlab = "hours",ylab = "effective distance",
cex.lab = 1.4,col = "magenta")
lines(times,theta * 24 / (2 *pi),col = "red",lwd = 3,lty = 1,type = "l")
lines(times,vartheta * 168 / (2 *pi),col = "blue", lwd = 3 ,lty = 1, type = "l")
legend("topleft",c("linear time lag","daily circular time lag",
"weekly circular time lag"),
col = c("magenta","red","blue"),lwd = 2,lty = 1,cex = 1.5)
dev.off()
times = seq(0,200,length = 201)
theta = period_time(times,24)
vartheta = period_time(times,168)
cov_out = matrix(0,length(times),S)
for(i in 1:length(times)){
#cov_out[i] = example1(theta[i],vartheta[i],times[i],cov_mean[1],cov_mean[2],cov_mean[3],cov_mean[4])
for(j in 1:S){
cov_out[i,j] =  example9(theta[i],vartheta[i],times[i],
mod$cov[j,1],mod$cov[j,2],mod$cov[j,3],mod$cov[j,4])
}
}
cov_mean = apply(cov_out,1,mean)
cov_CI = apply(cov_out,1,quantile,c(0.025,0.975))
pdf("../../paper1/cov_plot.pdf",width =10,height = 4)
plot(times,cov_mean,type = "l",lwd = 3,xlab = "hours",ylab = "correlation",
cex.lab = 1.4,col = "black",xaxs = "i",yaxs = "i",ylim = c(0,1))
polygon(c(times,rev(times)),c(cov_CI[1,],rev(cov_CI[2,])),
border = "red",col = "lightgray",lwd = 2)
lines(times,cov_mean,type = "l",lwd = 3,xlab = "hours",ylab = "correlation",
cex.lab = 1.4,col = "blue")
dev.off()
setwd("C:/Users/philaw/Box/Research/Porcu/Torus/code/Space_circle/cloud_cover_w")
load("mod8.RData")
Rcpp::sourceCpp("nngp_circle.cpp")
cov_mean = apply(mod_out$cov,2,mean)
for(i in 1:nrow(all_inputs)){
#cov_out[i] = example1(theta[i],vartheta[i],times[i],cov_mean[1],cov_mean[2],cov_mean[3],cov_mean[4])
cov_out[i] =  example7(all_inputs[i,1],all_inputs[i,3],all_inputs[i,2],cov_mean[1],
cov_mean[2],cov_mean[3],cov_mean[4],cov_mean[5])
}
# load("mod8.RData")
# Rcpp::sourceCpp("nngp_circle.cpp")
#
period_time = function(t,period = 12){
mod_t = t %% period
time1 = 2 * pi * mod_t / period
time2 = 2 * pi -  2 * pi * mod_t / period
apply(cbind(time1,time2),1,min)
}
cov_mean = apply(mod_out$cov,2,mean)
times = seq(0,12,length = 100)
theta = seq(0,pi,length = 100)
vartheta = period_time(times,12)
all_inputs = cbind(rep(theta,each = 100),rep(times,times = 100),rep(vartheta,times = 100))
cov_out = numeric(nrow(all_inputs))
for(i in 1:nrow(all_inputs)){
#cov_out[i] = example1(theta[i],vartheta[i],times[i],cov_mean[1],cov_mean[2],cov_mean[3],cov_mean[4])
cov_out[i] =  example8(all_inputs[i,1],all_inputs[i,3],all_inputs[i,2],cov_mean[1],
cov_mean[2],cov_mean[3],cov_mean[4],cov_mean[5])
}
col_use = two.colors(n=256, start="white", end="red", middle="magenta",
alpha=1.0)
par(mar = c(5,5,1,1))
quilt.plot(all_inputs[,1],all_inputs[,2],cov_out, cex.lab = 1.4,
xlab = "great circle distance (r)",
ylab = expression(paste("Time lag (|",tau,"|) in months")),
nx = 100, ny = 100, col = tim.colors(n = 256,alpha = 0.7),
breaks = c(seq(0,.1,length = 100),seq(0.11,.25,length = 50),
seq(0.26,.5,length = 50),seq(0.51,1,length = 57)))
load("mod8.RData")
quilt.plot(all_inputs[,1],all_inputs[,2],cov_out)
cov_mean = apply(mod_out$cov,2,mean)
dim(mod_out$cov)
cov_mean = apply(mod_out$cov,2,mean)
times = seq(0,12,length = 100)
times = seq(0,12,length = 100)
theta = seq(0,pi/4,length = 100)
vartheta = period_time(times,12)
all_inputs = cbind(rep(theta,each = 100),rep(times,times = 100),rep(vartheta,times = 100))
cov_out = matrix(0,1000,nrow(all_inputs))
for(i in 1:nrow(all_inputs)){
for(j in 1:1000){
#cov_out[i] = example1(theta[i],vartheta[i],times[i],cov_mean[1],cov_mean[2],cov_mean[3],cov_mean[4])
cov_out[j,i] =  example8(all_inputs[i,1],all_inputs[i,3],all_inputs[i,2],mod_out$cov[j,1],
mod_out$cov[j,2],mod_out$cov[j,3],mod_out$cov[j,4],mod_out$cov[j,5])
}
}
Rcpp::sourceCpp("nngp_circle.cpp")
times = seq(0,12,length = 100)
theta = seq(0,pi/4,length = 100)
vartheta = period_time(times,12)
all_inputs = cbind(rep(theta,each = 100),rep(times,times = 100),rep(vartheta,times = 100))
cov_out = matrix(0,1000,nrow(all_inputs))
for(i in 1:nrow(all_inputs)){
for(j in 1:1000){
#cov_out[i] = example1(theta[i],vartheta[i],times[i],cov_mean[1],cov_mean[2],cov_mean[3],cov_mean[4])
cov_out[j,i] =  example8(all_inputs[i,1],all_inputs[i,3],all_inputs[i,2],mod_out$cov[j,1],
mod_out$cov[j,2],mod_out$cov[j,3],mod_out$cov[j,4],mod_out$cov[j,5])
}
}
quilt.plot(all_inputs[,1],all_inputs[,2],cov_out)
quilt.plot(all_inputs[,1],all_inputs[,2],apply(cov_out,2,mean))
par(mar = c(5,5,1,1))
quilt.plot(all_inputs[,1],all_inputs[,2],cov_out, cex.lab = 1.4,
xlab = "great circle distance (r)",
ylab = expression(paste("Time lag (|",tau,"|) in months")),
nx = 100, ny = 100, col = tim.colors(n = 256,alpha = 0.7),
breaks = c(seq(0,.1,length = 100),seq(0.11,.25,length = 50),
seq(0.26,.5,length = 50),seq(0.51,1,length = 57)))
par(mar = c(5,5,1,1))
quilt.plot(all_inputs[,1],all_inputs[,2],apply(cov_out,2,mean), cex.lab = 1.4,
xlab = "great circle distance (r)",
ylab = expression(paste("Time lag (|",tau,"|) in months")),
nx = 100, ny = 100, col = tim.colors(n = 256,alpha = 0.7),
breaks = c(seq(0,.1,length = 100),seq(0.11,.25,length = 50),
seq(0.26,.5,length = 50),seq(0.51,1,length = 57)))
par(mar = c(5,5,1,1))
quilt.plot(all_inputs[,1],all_inputs[,2],apply(cov_out,2,mean), cex.lab = 1.4,
xlab = "great circle distance (r)",
ylab = expression(paste("Time lag (|",tau,"|) in months")),
nx = 100, ny = 100, col = tim.colors(n = 256,alpha = 0.7),
breaks = c(seq(0,.1,length = 100),seq(0.11,.25,length = 50),
seq(0.26,.5,length = 50),seq(0.51,1,length = 57)))
quilt.plot(all_inputs[,1],all_inputs[,2],apply(cov_out,2,mean), cex.lab = 1.4,
xlab = "great circle distance (r)",
ylab = expression(paste("Time lag (|",tau,"|) in months")),
nx = 100, ny = 100, col = tim.colors(n = 256,alpha = 0.7),
breaks = c(seq(0,.1,length = 145),seq(0.11,.25,length = 35),
seq(0.26,.5,length = 35),seq(0.51,1,length = 42)))
quilt.plot(all_inputs[,1],all_inputs[,2],apply(cov_out,2,mean), cex.lab = 1.4,
xlab = "great circle distance (r)",
ylab = expression(paste("Time lag (|",tau,"|) in months")),
nx = 100, ny = 100, col = tim.colors(n = 256,alpha = 0.7),
breaks = c(seq(0,.1,length = 100),seq(0.11,.25,length = 50),
seq(0.26,.5,length = 50),seq(0.51,1,length = 57)))
pdf("cov_cloud_mean.pdf")
par(mar = c(5,5,1,1))
quilt.plot(all_inputs[,1],all_inputs[,2],apply(cov_out,2,mean), cex.lab = 1.4,
xlab = "great circle distance (r)",
ylab = expression(paste("Time lag (|",tau,"|) in months")),
nx = 100, ny = 100, col = tim.colors(n = 256,alpha = 0.7),
breaks = c(seq(0,.1,length = 100),seq(0.11,.25,length = 50),
seq(0.26,.5,length = 50),seq(0.51,1,length = 57)))
dev.off()
times = seq(0,12,length = 100)
theta = seq(0,pi,length = 100)
vartheta = period_time(times,12)
all_inputs = cbind(rep(theta,each = 100),rep(times,times = 100),rep(vartheta,times = 100))
cov_out = matrix(0,1000,nrow(all_inputs))
for(i in 1:nrow(all_inputs)){
for(j in 1:1000){
#cov_out[i] = example1(theta[i],vartheta[i],times[i],cov_mean[1],cov_mean[2],cov_mean[3],cov_mean[4])
cov_out[j,i] =  example8(all_inputs[i,1],all_inputs[i,3],all_inputs[i,2],mod_out$cov[j,1],
mod_out$cov[j,2],mod_out$cov[j,3],mod_out$cov[j,4],mod_out$cov[j,5])
}
}
par(mar = c(5,5,1,1))
quilt.plot(all_inputs[,1],all_inputs[,2],apply(cov_out,2,mean), cex.lab = 1.4,
xlab = "great circle distance (r)",
ylab = expression(paste("Time lag (|",tau,"|) in months")),
nx = 100, ny = 100, col = tim.colors(n = 256,alpha = 0.7),
breaks = c(seq(0,.1,length = 100),seq(0.11,.25,length = 50),
seq(0.26,.5,length = 50),seq(0.51,1,length = 57)))
pdf("../../../paper1/cov_cloud_mean.pdf")
par(mar = c(5,5,1,1))
quilt.plot(all_inputs[,1],all_inputs[,2],apply(cov_out,2,mean), cex.lab = 1.4,
xlab = "great circle distance (r)",
ylab = expression(paste("Time lag (|",tau,"|) in months")),
nx = 100, ny = 100, col = tim.colors(n = 256,alpha = 0.7),
breaks = c(seq(0,.1,length = 100),seq(0.11,.25,length = 50),
seq(0.26,.5,length = 50),seq(0.51,1,length = 57)))
dev.off()
load("mod7.RData")
Rcpp::sourceCpp("nngp_circle.cpp")
period_time = function(t,period = 12){
mod_t = t %% period
time1 = 2 * pi * mod_t / period
time2 = 2 * pi -  2 * pi * mod_t / period
apply(cbind(time1,time2),1,min)
}
cov_mean = apply(mod_out$cov,2,mean)
times = seq(0,12,length = 100)
theta = seq(0,pi,length = 100)
vartheta = period_time(times,12)
all_inputs = cbind(rep(theta,each = 100),rep(times,times = 100),rep(vartheta,times = 100))
cov_out = matrix(0,1000,nrow(all_inputs))
for(i in 1:nrow(all_inputs)){
for(j in 1:1000){
#cov_out[i] = example1(theta[i],vartheta[i],times[i],cov_mean[1],cov_mean[2],cov_mean[3],cov_mean[4])
cov_out[j,i] =  example7(all_inputs[i,1],all_inputs[i,3],all_inputs[i,2],mod_out$cov[j,1],
mod_out$cov[j,2],mod_out$cov[j,3],mod_out$cov[j,4],mod_out$cov[j,5])
}
}
quilt.plot(all_inputs[,1],all_inputs[,2],apply(cov_out,2,mean))
par(mar = c(5,5,1,1))
quilt.plot(all_inputs[,1],all_inputs[,2],apply(cov_out,2,mean), cex.lab = 1.4,
xlab = "great circle distance (r)",
ylab = expression(paste("Time lag (|",tau,"|) in months")),
nx = 100, ny = 100, col = tim.colors(n = 256,alpha = 0.7),
breaks = c(seq(0,.1,length = 100),seq(0.11,.25,length = 50),
seq(0.26,.5,length = 50),seq(0.51,1,length = 57)))
pdf("../../../paper1/cov_cloud_mean.pdf")
par(mar = c(5,5,1,1))
quilt.plot(all_inputs[,1],all_inputs[,2],apply(cov_out,2,mean), cex.lab = 1.4,
xlab = "great circle distance (r)",
ylab = expression(paste("Time lag (|",tau,"|) in months")),
nx = 100, ny = 100, col = tim.colors(n = 256,alpha = 0.7),
breaks = c(seq(0,.1,length = 100),seq(0.11,.25,length = 50),
seq(0.26,.5,length = 50),seq(0.51,1,length = 57)))
dev.off()
mod_out$
mod_ouasdfjk
mod_out$sig2 / (mod_out$sig2 + mod_out$tau2)
pdf("../../../paper1/cov_cloud_mean.pdf",width = 10, height = 5)
par(mar = c(5,5,1,1))
quilt.plot(all_inputs[,1],all_inputs[,2],apply(cov_out,2,mean), cex.lab = 1.4,
xlab = "great circle distance (r)",
ylab = expression(paste("Time lag (|",tau,"|) in months")),
nx = 100, ny = 100, col = tim.colors(n = 256,alpha = 0.7),
breaks = c(seq(0,.1,length = 100),seq(0.11,.25,length = 50),
seq(0.26,.5,length = 50),seq(0.51,1,length = 57)))
dev.off()
setwd("~/GitHub/Torus_code1/Mexico_City")
setwd("~/GitHub/Torus_code1/Cloud_Cover")
